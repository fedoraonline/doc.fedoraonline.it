{{InCorso|autore=AlbertoChiusole}}
{{Autore|AlbertoChiusole}}
==Introduzione==
Con la presente guida si vuole solamente aggiornare ed integrare le precedenti redatte sull'uso di yum e sulla configurazione dei repositories per la gestione dei pacchetti rpm in Fedora.<br />
Yum è l'acronimo di Yellow dog Updater, Modified ed è il sistema di gestione dei pacchetti, ormai standard in Fedora, che si affianca ed integra con l'ottimo rpm. Esso si appoggia a dei repository esterni (mantenuti dal Fedora Project e da terze parti), contenenti i programmi per l'uso del sistema operativo e per le più disparate applicazioni aggiuntive.<br />
Tenendo presente l'esistenza di interfacce grafiche per l'utilizzo di yum mediante GUI (es. kyum, yumex ecc.), si farà riferimento all'uso del programma da terminale.

== Yum ==

Principalmente yum ha il vantaggio (rispetto ad rpm) di poter risolvere le dipendenze senza intervento da parte dell'utente e, nel caso non riuscisse a soddisfarle con i repository al momento attivi, uscire dal programma con un errore ben leggibile, dichiarando le dipendenze non trovate o i conflitti rilevati, agevolando così le ricerche della soluzione da parte dell'utente.

Non è nelle intenzioni di questa guida fare una mera traduzione delle pagine man del comando yum, alle quali chiunque può accedere semplicemente digitando, da terminale:

'''man yum'''

==Principali comandi==

E' bene comunque avere ben chiari i principali comandi ed il fine a cui possono essere rivolti, pertanto di seguito si vedrà una breve panoramica.<br />
{{Warning|Yum deve essere eseguito con i '''permessi di root''', ottenuti con il comando
 $ su
 password
 #}}

===Installazione di programmi===
Eseguendo il comando:

 # yum install nome_programma

Yum cercherà nei repository attivati dall'utente, il programma passato come argomento e, se trovato, lo proporrà per l'installazione; basterà digitare "y" o "n" per eseguirla o meno. Esiste anche l'opzione "-y" da passare al comando:

 # yum -y install nome_programma 

che permette di bypassare la richiesta di procedere o meno. Per esperienza, questa opzione è da usare con cautela in quanto non permette, salvo provvedimenti drastici, di intervenire in caso di situazioni anomale.

===Aggiornamento di programmi===
Eseguendo il comando:

 # yum update nome_programma 

Yum cercherà nei repository attivati dall'utente, versioni più aggiornate del programma passato come argomento. Anche in questo caso è utilizzabile l'opzione "-y" per la quale si rinnova, anche con più pertinenza, l'avviso precedente sul suo utilizzo.<br />
E' possibile utilizzare il comando senza argomenti per l'aggiornamento completo del sistema in relazione ai soli programmi installati, ovviamente:

 # yum update

ed, in questo caso, si sconsiglia vivamente l'utilizzo dell'opzione "-y"; meglio controllare ciò che ci si appresta a fare.

===Rimozione di programmi===
Eseguendo il comando:

 # yum remove nome_programma

Yum rimuoverà il programma definito e le relative dipendenze dirette.<br />
Yum non è solo quello visto finora, alcuni suoi comandi sono molto utili per potersi districare da laboriose installazioni.

===Ricerca di pacchetti===
Per avere un'idea di quanti e quali pacchetti sono stati aggiornati dall'ultimo update eseguito, è necessario solamente digitare:

 # yum check-update

Verrà proposta una lista degli aggiornamenti per ciascun pacchetto e da quale repository proviene.<br />
Talvolta non si sa a quale pacchetto occorre riferirsi per la ricerca di una data libreria o di qualsiasi file presente negli rpm; anche in questo caso yum ci soccorre con il comando:

 # yum provides nome_file

proponendo, in base ai repository attivati dall'utente, i pacchetti all'interno dei quali tale file risulta essere presente. A quel punto basta eseguire lo yum install dell'rpm.

===Gestione gruppi di programmi===
Per installare un gruppo di programmi che si sarebbe dovuto/voluto avere, ma che non si è selezionato in fase di prima installazione di Fedora, si può utilizzare yum per porvi rimedio.
Ad esempio, con;

 # yum grouplist

si potrà vedere a terminale un elenco per gruppi anzichè per programmi singoli. Per capirci, se si volesse installare KDE, non avendolo ancora installato, si potrebbe, anzichè perdersi nell'installazione di tutti i programmi di KDE (oltre al DM stesso), semplicemente digitare:

 # yum groupinstall 'KDE (K Desktop Environment)'

prestando attenzione alle virgolette, e tutto il desktop environment verrà proposto per l'installazione. Parimenti il discorso è valido anche per tutti i gruppi risultanti dal "grouplist".
Allo stesso modo, i comandi ''groupupdate'' e ''groupremove'' agiscono su tali gruppi:

 # yum groupupdate 'KDE (K Desktop Environment)'

aggiorna KDE e

 # yum groupremove 'KDE (K Desktop Environment)'

lo rimuove.

===Installazione in locale===
Il programa yum agisce su tutti gli rpm e, avendo un programma in tale formato sul proprio hard disk e volendolo installare con l'ausilio di yum per la ricerca delle dipendenze mancanti, occorre digitare (posizionandosi nella directory dove è presente l'rpm da installare):

 # yum localinstall nome_programma

Questa opzione può essere usata anche per installare localmente un rpm proveniente dalla rete: la sintassi è simile al precedente

 # yum localinstall indirizzo_dove_è_presente_il_file.rpm

===Plugins per yum===
Esistono anche dei plugin per yum, quelli più interessanti sono i seguenti:

* '''yum-presto''': plugin che permette la risoluzione delle dipendenze in locale anzichè in remoto. Questo plugin, appoggiandosi a dei metadati (drpm), permette di scaricare solo le porzioni di pacchetti che differiscono dalla versione installata del programma a quella a cui si sta facendo l'aggiornamento, riducendo quindi la dimensione dei file da scaricare e ovviamente il nostro tempo (questo plugin dovrebbe essere già integrato di base nella nostra installazione, nel caso che non lo fosse basta installarlo tranquillamente da yum o gestore grafico);
* '''yum-plugin-fastestmirror''': plugin molto utile che prima di iniziare il download effettua una ricerca dei mirror con una migliore velocità di connessione.


Per altri plugin di yum, digitare da terminale: '''yum search yum-plugin'''

==Configurazione dei Repositories==

Tutto quanto sopra detto, senza un ulteriore intervento, è applicabile per i soli repository installati di default da Fedora.
I repository di terze parti di più frequente utilizzo, e che soddisfano al 99% le proprie esigenze (probabilmente se non si trova il pacchetto rpm in questi repos si dovrà scaricare i sorgenti e procedere alla compilazione manuale del programma perdendo la possibilità di gestirlo tramite yum o rpm in quanto esso non verrebbe “censito” nel database dei programmi installati) sono:

# '''livna''', che è mantenuto anche da alcuni sviluppatori del Fedora Project, utile per i moduli del kernel (ad esempio i driver delle schede video);
# '''freshrpms''', che è mantenuto da un componente di RPMforge;
# '''ATrpms''' che collabora con i repos appartenenti a RPMforge ed ad altri;
# '''kde-redhat''', un repository dedicato a KDE;

Innanzitutto andiamo ad analizzare il contenuto di un file .repo all'interno di /etc/yum.repos.d. In questo caso apriamo il file /etc/yum.repos.d/fedora.repo:

 cat /etc/yum.repos.d/fedora.repo

ed il contenuto risulta essere:
<pre>[fedora]
name=Fedora $releasever - $basearch
failovermethod=priority
#baseurl=http://download.fedoraproject.org/pub/fedora/linux/releases/$releasever/Everything/$basearch/os/
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-$releasever&arch=$basearch
enabled=1
metadata_expire=7d
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$basearch

[fedora-debuginfo]
name=Fedora $releasever - $basearch - Debug
failovermethod=priority
#baseurl=http://download.fedoraproject.org/pub/fedora/linux/releases/$releasever/Everything/$basearch/debug/
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-debug-$releasever&arch=$basearch
enabled=0
metadata_expire=7d
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$basearch

[fedora-source]
name=Fedora $releasever - Source
failovermethod=priority
#baseurl=http://download.fedoraproject.org/pub/fedora/linux/releases/$releasever/Everything/source/SRPMS/
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-source-$releasever&arch=$basearch
enabled=0
metadata_expire=7d
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$basearch</pre>

Lasciando perdere la parte ''fedora-debuginfo'' e ''fedora-source'' che devono venire utilizzati solo ed esclusivamente in casi speciali (vale a dire, praticamente mai), ci si concentra sulla prima configurazione dove:

 [fedora]

è il nome di riferimento per l'attivazione o disattivazione a linea di comando del repo.

 name=Fedora $releasever - $basearch

non è altro che la definizione del nome comprendente la versione (risultato della variabile $releasever che può essere il numero 15 per Fedora 15, il numero 16 per Fedora 16, ecc...) e l'architettura del sistema (risultato della variabile $basearch che può essere i386 per i processori a 32 bit, x86_64 per i processori a 64 bit ecc.)

 #baseurl=http://download.fedoraproject.org/pub/fedora/linux/releases/$releasever/Everything/$basearch/os/ 

Questo invece è il link pricipale da cui scaricare i pacchetti. In questo caso è commentato (si noti il '''#''' all'inizio della riga), per cui il programma salta la lettura di questa riga, in quanto sono attivi i mirrors che risultano dalla lista data da questo indirizzo:

 mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-$releasever&arch=$basearch

per cui yum scorre la lista dei mirrors del link e, al primo trovato disponibile, scarica i pacchetti. '''''Nelle versioni più recenti di fedora si è introdotto il metalink, cioè il download diretto della lista di mirror disponibile.'''''

 enabled=1

questa opzione è molto importante perchè permette, staticamente, di attivare o disattivare un repo, cioè di poterlo comprendere o meno nell'utilizzo di yum. In questo caso il repo è attivo (enabled=1) mentre se si volesse disattivarlo occorrerebbe impostare l'opzione a 0 (enabled=0), come ad esempio è impostato di default nei repo debuginfo e source per evitare problemi di incongruenze con pacchetti installati.

 gpgcheck=1

Questa è l'opzione che permette di verificare la validità del pacchetto confrontandone la chiave con quanto riportato nella riga successiva, in questo caso:

 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora file:///etc/pki/rpm-gpg/RPM-GPG-KEY

che significa che la chiave è all'interno della directory /etc/pki/rpm-gpg/.
Per indicare dove è situata la chiave di validità esistono te metodi.
* Importazione con il comando rpm --import:

 # rpm --import http://percorso_della_chiave

* Definendo il percorso internet direttamente nel repo:

 ..
 
 gpgkey=http://percorso_della_chiave

* Posizionando la chiave all'interno della cartella etc/pki/rpm-gpg/

 # cd /etc/pki/rpm-gpg/
 # wget http://percorso_della_chiave

e indicando il percorso del file all'interno del file repo.

==Aggiungere repository==
Qualora aveste bisogno di aggiungere altri repository al vostro sistema visitate la categoria [http://doc.fedoraonline.it/Categoria:Repository Repository] e seguite le informazioni riportate.

[[Categoria:Yum]]
[[Categoria:Repository]]
[[Categoria:Modifica in corso]]
