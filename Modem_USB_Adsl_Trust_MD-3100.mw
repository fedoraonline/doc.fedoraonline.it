{{Obsoleto}}
{{Wargning|Guida alla installazione del modem USB ADSL TRUST MD-3100 realizzata su FEDORA CORE 5 by Kenshiro}}

La guida che segue è frutto dell'utilizzo delle molte indicazioni trovate in altre guide sintetizzate con elementi di esperienza diretta e correzioni varie necessarie.

{{Nota|N.B.:|Si declina ogni responsabilità per perdita dati o danni hardware dovuti all'utilizzo delle indicazioni e procedure indicate di seguito e comunque per danni di ogni genere. Se si utilizzano le seguenti informazioni lo si fa a proprio rischio e pericolo.}}

I componenti richiesti per l'installazione sono i seguenti:
# Il sorgente del proprio kernel. Se non lo si possiede lo si può scaricare dal sito della propria distro, in questo caso http://mirror.eas.muohio.edu/fedora/linux/core/5/i386//os/Fedora/RPMS/
# Le vecchie guide indicavano di scaricare il "nuovo" ATM. Con Fedora Core 5 non occorre perché l’Atm di Fedora va benissimo e l’ATM che si scaricherebbe è vecchio di 2 anni e darebbe errore nella ricompilazione del kernel con conseguente fallimento della operazione.
# Il driver per Windows del modem TRUST MD-3100.
{{Warning|Fare attenzione perché il pacchetto che si scarica dal sito Trust non è decomprimibile. Perciò il file necessari li si trovano al seguente indirizzo http://www.atlantis-land.com/firmware/1863_DriverWinMultiV099.085WAN.zip}}

Si può iniziare l'installazione del modem.

==Installazione del kernel==
<ol>
<li>Scompattare il file rpm del sorgente del proprio kernel o dall'interfaccia grafica oppure da terminale con il comando
 $ rpm -ivh kernel-2.6.15-1.2054_FC5.src.rpm
(per veder la propria versione del kernel digitare uname-r)
</li>

<li>Poi digitare
 $ rpmbuild -bp --target=noarch /usr/src/redhat/SPECS/kernel-2.6.spece il sorgente si trova qui /usr/src/redhat/BUILD/kernel-2.6.15/
</li>

<li>A questo punto prima di compilare bisogna abilitare alcune opzioni del kernel. Eseguire il comando da terminale in modalità root:
 $ make menuconfig
oppure se correttamente installato
 $ make xconfig
per usufruire dell'interfaccia grafica.
</li>

<li>Andare sotto la voce Device Drivers -> USB support -> USB DSL modem support ed attivate USB DSL modem support & Conexant AccessRunner USB support.<br />
Questo attiverà anche il supporto per hotplug ed  il caricatore per i firmware (dalla ver 2.6.15 del kernel è sicuramente tutto integrato).
</li>

<li>Andare sotto la voce Networking support -> PPP support e configurare come di seguito
 PPP support
 PPP sync tty < potrebbero volerci
 PPP async tty < tutti e due
 PPP deflate < non obbligatorio
 PPP BSD-Compression < non obbligatorio
 PPP over ATM
</li>

<li>Andare sotto la voce Networking option e configurare come di seguito
 Asyncronous Transfer Mode
 Classical IP over ATM
 Do NOT send ICMP if no neighbour
</li>

Cmq dovrebbe essere già abbastanza settato.

<li>A questo punto eseguire
 $ make clean
per ripulire da precedenti compilazioni.
</li>

<li>Eseguire poi 
 $ make bzImage
per dare inizio alla compilazione del kernel. La compilazione impiega circa 10-15 minuti dipende dal processore.
</li>

<li>Poi eseguire
 $ make modules
per la compilazione dei moduli. La compilazione impiega circa 2 ore su un Celeron 500.
</li>

<li>Poi eseguire
 $ make modules_install
per copiare i moduli nella cartella /lib/modules/[versione del kernel].
</li>

<li>Poi eseguire 
 $ make install
per copiare l’immagine del kernel nella cartella /boot e via di seguito nelle altre cartelle.
</li>
</ol>

==Installazione del driver del modem==
<ol>
<li>Ora rimanendo sempre nella cartella dei sorgenti del proprio kernel, andare a prendere l'utility per estrarre il firmware dal cvs e poi compilarlo. Digitare i seguenti comandi da terminale impostato come root.
 $ cvs -z3 -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/accessrunner co -P utils
 cd utils
 make
..questo ovviamente se si ha la fortuna di poter accedere alla rete. Il caso più ricorrente è quello in cui si dispone del vecchio modem 56Kbps. Basta configurarlo con un driver linux generico anche a 9.600 bps, tanto l'operazione per scaricare l'utility dura 5 secondi. Poi il modem 56 K se non lo si usa per i fax si può pure buttare dalla finestra. (Guardare se passa qualcuno prima di gettarlo…se lo si colpisce si sarà responsabili per danni). 
</li>

<li>Copiare i file presi sopra in una qualsiasi Cartella</li>

<li>Estrarre dal driver di windows il file CnxEtU.sys e copiarlo nella Cartella. Ora da terminale eseguire il seguente comando
 $ ./cxacru-fw CnxEtU.sys cxacru-fw.bin
Verrà creato il file "cxacru-fw-bin" che altro non sarebbe che il firmware del nostro modem.
</li>

<li>Copiare il file "cxacru-fw.bin" sotto la cartella /lib/firmware.</li>

<li>N.B. Nel caso, una volta caricato il firmware, si riceve il messaggio:
 cxacru 1-1:1.0: poll status: error -5
significa che occorre una versione più recente del proprio firmware. Bisogna quindi cercare una versione aggiornata anche da produttori diversi da quello del modem in proprio possesso.
</li>

<li>A questo punto il driver del proprio modem dovrebbe già essere in funzione e il led ADSL del proprio modem dovrebbe lampeggiare per cercare la sincronizzazione con la linea.</li>

<li>Una volta agganciato il segnale ADSL, scrivere da terminale
 $ cat /proc/net/atm/cxacru:0
appariranno di seguito queste informazioni

 ADSL USB MODEM (usb-0000:00:07.2-1)
 MAC: xx:yy:zz:bla bla bla
 AAL5: tx 9363 ( 0 err ), rx 14299 ( 0 err, 0 drop )
 Line up

Il driver del modem è perfettamente funzionante
</li>
</ol>

{{Nota|NB|probabilmente si avrà un rallentamento di tutta l’interfaccia grafica di linux poiché forse non è ancora corretta la connessione causando tale disagio.}}

==Impostazione della connessione ADSL==

Prima di iniziare bisogna sapere:
# la propria "userid" e "password" che di solito per Telecom Alice sono "userid=aliceadsl" e "password=aliceadsl"
# VPI e VCI del proprio provider che nel caso di Telecom Alice sono 8 e 35.
# IP e DNS del proprio provider nel caso di una connessione con IP statico.

Iniziare con la configurazione
<ol>
<li>Creiamo il file “adsl” nella cartella /etc/ppp/peers/ e scriviamoci al suo interno quello di seguito:

 lock
 debug
 kdebug 1
 noauth
 maxfail 3
 ipparam ppp0
 noipdefault
 usepeerdns
 defaultroute
 noaccomp
 noccp
 nobsdcomp
 nodeflate
 nopcomp
 novj
 novjccomp
 persist
 plugin /usr/lib/pppd/2.4.3/pppoatm.so 8.35
 user aliceadsl
</li>

<li>Aprire il file /etc/ppp/pap-secrets ed inserire il proprio userid e password come di seguito:
 # Secrets for authentication using PAP
 # client server secret IP addresses
 aliceadsl * aliceadsl
 ####### redhat-config-network will overwrite this part!!! (begin) #####
 ####### redhat-config-network will overwrite this part!!! (end) #######
</li>

<li>Aprire il file /etc/ppp/chap-secrets ed inserire il proprio userid e password come di seguito:
 # Secrets for authentication using PAP
 # client server secret IP addresses
 aliceadsl * aliceadsl
 ####### redhat-config-network will overwrite this part!!! (begin) #####
 ####### redhat-config-network will overwrite this part!!! (end) #######
</li>

<li>A questo punto scrivere da terminale 
 $ /usr/sbin/pppd call adsl
ed il gioco è fatto.<br />
Ora se si apre mozilla o firefox e si è eseguito senza errori la procedura, navigare regolarmente. Io poi mi sono fatto un collegamento sul Desktop poiché ogni volta che accendo il computer, occorre rieseguire "/usr/sbin/pppd call adsl" per avviare la connessione.
</li>

<li>Controllare su /var/log/messagges se appaiono scritte del genere

 Jun 3 00:07:40 localhost pppd[5101]: Plugin /usr/lib/pppd/2.4.3/pppoatm.so loaded.
 Jun 3 00:07:40 localhost kernel: CSLIP: code copyright 1989 Regents of the University of California
 Jun 3 00:07:40 localhost kernel: PPP generic driver version 2.4.2
 Jun 3 00:07:40 localhost pppd[5101]: PPPoATM plugin_init
 Jun 3 00:07:40 localhost pppd[5101]: PPPoATM setdevname_pppoatm - SUCCESS:8.35
 Jun 3 00:07:40 localhost su(pam_unix)[5095]: session closed for user root
 Jun 3 00:07:40 localhost pppd[5126]: pppd 2.4.2 started by root, uid 0
 Jun 3 00:07:40 localhost pppd[5126]: Using interface ppp0
 Jun 3 00:07:40 localhost pppd[5126]: Connect: ppp0 <--> 8.35
 Jun 3 00:07:40 localhost pppd[5126]: Warning - secret file /etc/ppp/pap-secrets has world and/or group access
 Jun 3 00:07:43 localhost pppd[5126]: Warning - secret file /etc/ppp/pap-secrets has world and/or group access
 Jun 3 00:07:43 localhost pppd[5126]: PAP authentication succeeded
 Jun 3 00:07:43 localhost pppd[5126]: local IP address 82.59.0.222
 Jun 3 00:07:43 localhost pppd[5126]: remote IP address 192.168.100.1
 Jun 3 00:07:43 localhost pppd[5126]: primary DNS address 80.17.212.208
 Jun 3 00:07:43 localhost pppd[5126]: secondary DNS address 151.99.125.1
</li>
<li>Controllare su /etc/resolv.conf se i dns sono corretti altrimenti si dovranno inserire a mano.

 ; generated by /sbin/dhclient-script
 search pool8251.interbusiness.it
 nameserver 80.17.212.208

Per chi ha libero adsl nel file resolv.conf deve scrivere
 search libero.it
 nameserver 193.70.192.25
 nameserver 193.70.152.25

Perciò il comando per connettersi sarà: $ /usr/sbin/pppd call adsl<br />
Il comando per disconnettersi sarà: $ killall pppd

Buona navigazione.  Kenshiro

{{Warning|Stare attenti a scrivere tutto correttamente con tutti gli spazi richiesti. Un errore può essere "fatale" per le operazioni.<br /> Una volta configurato il tutto è consigliabile connettersi ad internet con l’adsl ed aggiornare il sistema da terminale root col comando  YUM update (Ci metterà un po' a scaricare circa 500 Mb di aggiornamenti, ma alla fine avrete l'ultima versione effettiva di Fedora 5).}}

[[Categoria:Sistema]]
[[Categoria:Hardware]]
